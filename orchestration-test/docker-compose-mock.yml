version: '3.7'

networks:
  avis_network_test:
    name: avis_network_test

services:
  postgres:
    image: postgres:10.5
    container_name: postgres
    healthcheck:
      test: psql postgres --command "select 1" -U postgres
    restart: unless-stopped
    networks:
      - avis_network_test
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
    logging:
      options:
        max-size: 10m
        max-file: "3"
    ports:
      - "5432:5432"
    volumes:
      - ./pgdata:/var/lib/postgresql/data
      - ./data/schema.sql:/docker-entrypoint-initdb.d/1-schema.sql
      - ./data/data.sql:/docker-entrypoint-initdb.d/2-data.sql
  pgadmin:
    image: dpage/pgadmin4
    depends_on:
      - postgres
    container_name: pgadmin
    restart: unless-stopped
    networks:
      - avis_network_test
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "${PGADMIN_PORT:-5050}:80"
  orchestration-api:
    image: orchestration-api:0.1
    container_name: orchestration-api
    depends_on:
      - postgres
    networks:
      - avis_network_test
    environment:
      - DATABASE_URL=jdbc:postgresql://postgres:5432/postgres
      - DATABASE_DRIVER=org.postgresql.Driver
      - DATABASE_USER=postgres
      - DATABASE_PASSWORD=password
      - HIBERNATE_DIALECT=org.hibernate.dialect.PostgreSQLDialect
    ports:
      - "9300:9300"
  wiremock:
    image: wiremock/wiremock
    container_name: wiremock
    networks:
      - avis_network_test
    volumes:
      - ./wiremock/mappings:/wiremock/mappings
      - ./wiremock/__files:/wiremock/__files
      - ./wiremock/certificates:/wiremock/certificates
    ports:
      - "9100:9100"
      - "9200:9200"
volumes:
  postgres:
  pgadmin:

