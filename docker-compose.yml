version: '3.7'

networks:
  avis_network:
    name: avis_network

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:5.5.0
    container_name: zookeeper
    ports:
      - '2181:2181'
    networks:
      - avis_network
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  broker:
    image: confluentinc/cp-kafka:5.5.0
    container_name: kafka-broker
    networks:
      - avis_network
    ports:
      - '19092:19092'
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker:9092,CONNECTIONS_FROM_HOST://localhost:19092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONNECTIONS_FROM_HOST:PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  postgres:
    image: postgres:10.5
    container_name: postgres
    healthcheck:
      test: psql postgres --command "select 1" -U postgres
    restart: unless-stopped
    networks:
      - avis_network
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - PGDATA=/data/postgres
      - POSTGRES_DB= postgres
    logging:
      options:
        max-size: 10m
        max-file: "3"
    ports:
      - "5432:5432"
    volumes:
      - postgres:/data/postgre
  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: unless-stopped
    networks:
      - avis_network
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: root
    volumes:
      - pgadmin:/var/lib/pgadmin
    ports:
      - "${PGADMIN_PORT:-5050}:80"
      # copy the sql script to create tables
#      - ./sql/create_tables.sql:/docker-entrypoint-initdb.d/create_tables.sql
  pact-broker:
    image: pactfoundation/pact-broker:2.91.0.0
    ports:
      - "9292:9292"
    depends_on:
      - postgres
    networks:
      - avis_network
    environment:
      PACT_BROKER_PORT: '9292'
      PACT_BROKER_DATABASE_URL: "postgres://postgres:password@postgres/postgres"
      PACT_BROKER_LOG_LEVEL: INFO
      PACT_BROKER_SQL_LOG_LEVEL: DEBUG
      # PACT_BROKER_DATABASE_CONNECT_MAX_RETRIES is only needed for docker-compose
      # because the database takes longer to start up than the puma process
      # Should not be needed in production.
      PACT_BROKER_DATABASE_CONNECT_MAX_RETRIES: "5"
      # The list of allowed base URLs (not setting this makes the app vulnerable to cache poisoning)
      # This allows the app to be addressed from the host from within another docker container correctly
      PACT_BROKER_BASE_URL: 'https://localhost http://localhost http://localhost:9292 http://pact-broker:9292'
  # Nginx is not necessary, but demonstrates how
  # one might use a reverse proxy in front of the broker,
  # and includes the use of a self-signed TLS certificate
#  nginx:
#    image: nginx:alpine
#    depends_on:
#      - pact-broker
#    networks:
#      - avis_network
#    volumes:
#      - ./ssl/nginx.conf:/etc/nginx/conf.d/default.conf:ro
#      - ./ssl:/etc/nginx/ssl
#    ports:
#      - "443:443"
#      - "80:80"
volumes:
  postgres:
  pgadmin:

